---
# The high-level description of your tile.
# Replace these properties with real values.
#
name: snappydata-managed-service # By convention lowercase with dashes
icon_file: src/main/resources/icon.png
label: SnappyData Managed Service
description: A SnappyData cluster as a managed service.
# metadata_version: 1.8                 # Optional, defaults to 1.5

# Global defaults (all optional)
#
# org: test-org                         # Name of org to create for your apps
# space: test-space                     # Name of space to create for your apps
apply_open_security_group: true         # Apply open security group, default: false

# Specify the packages to be included in your tile.
# The format of the section to include depends on the type
# of package you are describing. For fragments of each type
# that you can copy & paste, see:
#
# https://github.com/cf-platform-eng/tile-generator/blob/master/README.md
#
packages:
- name: snappydata-broker
  type: app-broker
  enable_global_access_to_plans: true
  manifest:
    path: build/libs/snappydata-cf-service-broker-0.1-SNAPSHOT.jar
#   command: python app.py
#   memory: 256M
- name: snappydata-service
  type: bosh-release
  path: snappy-managed-service-0+dev.27.tgz
  jobs:
  - name: snappydata_locator
    templates:
    - name: snappydata_locator
      release: snappy-managed-service
#    instances: (( .properties.snappydata_locators ))
#    memory: 2048M
    static_ip: 1
    properties:
      snappydata:
        locator_options: (( .properties.snappydata_locator_options.value ))
        admin_username: (( .properties.snappydata_admin_user.value ))
        admin_user_pass: (( .properties.snappydata_admin_pw.value ))
  - name: snappydata_server
    templates:
    - name: snappydata_server
      release: snappy-managed-service
#    instances: (( .properties.snappydata_servers ))
#    memory: 2048M
    static_ip: 1
    properties:
      snappydata:
        server_options: (( .properties.snappydata_server_options.value ))
        admin_username: (( .properties.snappydata_admin_user.value ))
        admin_user_pass: (( .properties.snappydata_admin_pw.value ))
  - name: snappydata_lead
    templates:
    - name: snappydata_lead
      release: snappy-managed-service
#    instances: (( .properties.snappydata_leads ))
#    memory: 2048
    static_ip: 1
    properties:
      snappydata:
        lead_options: (( .properties.snappydata_lead_options.value ))
        admin_username: (( .properties.snappydata_admin_user.value ))
        admin_user_pass: (( .properties.snappydata_admin_pw.value ))


# Include stemcell criteria if you don't want to accept the default.
# Since this stemcell is only used to run pre and post errands, we
# strongly recommend you leave this alone so that your tile always
# runs with the latest stemcell.
#
# stemcell_criteria:
#   os: ubuntu-trusty
#   requires_cpi: false
#   version: '3062'

# Add properties you want to pass to your applications.
# Properties specified here will not be configurable by the user.
#
# properties:
# - name: example_property
#   type: string
#   default: specify a value
#   label: Label for the field on the GUI
#   description: Longer description of the field's purpose

# Uncomment this section if you want to display forms with configurable
# properties in Ops Manager. These properties will be passed to your
# applications as environment variables. You can also refer to them
# elsewhere in this template by using:
#     (( .properties.<property-name> ))
# 
forms:
- name: broker_form
  label: SnappyData Broker Properties
  description: SnappyData Broker Properties
  properties:
  - name: snappydata_admin_user
    type: string
    default: 'SNAPPYADMIN'
    label: snappydata admin username
    description: Username with admin privileges.
  - name: snappydata_admin_pw
    type: secret
    label: snappydata admin password
    description: Password for the admin user.
  - name: snappydata_connection_props
    type: string
    default: ''
    label: snappydata-service properties
    description: The properties to be passed when connecting to SnappyData cluster.
- name: bosh_form
  label: SnappyData BOSH Properties
  description: SnappyData BOSH Properties
  properties:
  - name: snappydata_locator_options
    type: string
    default: ''
    label: snappydata locator options
    description: Common startup options for snappydata locator processes.
  - name: snappydata_server_options
    type: string
    default: ''
    label: snappydata server options
    description: Common startup options for snappydata server processes.
  - name: snappydata_lead_options
    type: string
    default: ''
    label: snappydata lead options
    description: Common startup options for snappydata lead processes.

# Add any dependencies your tile has on other installed products.
# This is often appropriate when using automatic service provisioning
# for any of your packages above, with services provided by other
# products.
#
# requires_product_versions:
# - name: p-mysql
#   version: '~> 1.7'

# Customize upgrade parameters if the defaults don't meet your needs.
#
# update:
#   canaries: 1
#   canary_watch_time: 10000-100000
#   max_in_flight: 1
#   update_watch_time: 10000-100000

# If prior versions of your tile are installed and configured, their
# property values will not be overwritten by new defaults provided
# in this file. If that is your intent, you must do the overwriting
# explicitly using JavaScript migration functions, like so:
#
# migration: |
#   properties['properties']['.properties.org']['value'] = 'system';
